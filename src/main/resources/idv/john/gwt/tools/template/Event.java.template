/*
 * Copyright 2015 Johnson Hsu 
 * 
 * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 3.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at 
 * 
 * http://www.gnu.org/licenses/lgpl-3.0.txt 
 *  
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and 
 * limitations under the License. 
 */

<#if package?? && package != "">
package ${package};

</#if>
import com.google.gwt.event.shared.EventHandler;
import com.google.gwt.event.shared.GwtEvent;

/**
 *
 * @author ${user}
 */
public class ${name} extends GwtEvent<${name}.${name}Handler> {

    public static final Type<${name}Handler> TYPE =
            new Type<${name}Handler>(); 

    public enum Action {
        <#list actions as item>
        /** ${item.comment} */
        ${item.name}<#sep>,
        </#sep>
        </#list>

    }
    
    private final Action action;
    
    public ${name}(Action action) {
        this.action = action;
    }

    @Override
    public Type<${name}Handler> getAssociatedType() {
        return TYPE;
    }
    
    @Override
    protected void dispatch(${name}Handler handler) {
        <#list actions as item>
        <#if item?index == 0>
        if (action == Action.${item.name}) {
        <#else>
        } else if (action == Action.${item.name}) {
        </#if>
            handler.on<#list item.name?split("_") as m>${m?lower_case?cap_first}</#list>(this);
        <#if item?is_last>
        }
        </#if>
        </#list>
    }
    
    
    public interface ${name}Handler extends EventHandler {

        <#list actions as item>
        /**
         * fire if action equals {@code Action.${item.name}}
         *
         * @param event
         * @see ${name}.Action
         */
        void on<#list item.name?split("_") as m>${m?lower_case?cap_first}</#list>(${name} event);

        </#list>
    }
    
}
